# Generated by Django 5.2 on 2025-05-05 05:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllergyCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'spc_cond',
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spc_code', models.CharField(max_length=7, unique=True, validators=[django.core.validators.RegexValidator(regex='^[A-Za-z]{3}\\d{4}$')])),
                ('last_name', models.CharField(max_length=25)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=25, null=True)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('dob', models.DateField()),
                ('blood_grp', models.CharField(blank=True, max_length=3, null=True)),
                ('comm_address', models.TextField(max_length=255)),
                ('fam_philhealth', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.MinLengthValidator(14)])),
                ('fam_4ps', models.CharField(blank=True, max_length=20, null=True)),
                ('guardian_lastname', models.CharField(max_length=25)),
                ('guardian_firstname', models.CharField(max_length=50)),
                ('guardian_middlename', models.CharField(blank=True, max_length=25, null=True)),
                ('guardian_relationship', models.CharField(max_length=25)),
                ('guardian_sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('age', models.IntegerField()),
            ],
            options={
                'db_table': 'spc',
            },
        ),
        migrations.CreateModel(
            name='AnnualMedicalCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('height', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('hemoglobin', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('condition', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annual_medical_checks', to='msys42app.child')),
            ],
            options={
                'db_table': 'annual_med_check',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=25)),
                ('first_name', models.CharField(max_length=25)),
                ('middle_name', models.CharField(max_length=25, null=True)),
                ('relationship_w_spc', models.CharField(max_length=25)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='msys42app.child')),
            ],
            options={
                'db_table': 'fam_member',
            },
        ),
        migrations.CreateModel(
            name='FamilyMedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('bmi', models.DecimalField(decimal_places=1, max_digits=4, null=True)),
                ('bp', models.CharField(blank=True, max_length=5, null=True)),
                ('temp', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('med_stat', models.CharField(blank=True, max_length=50, null=True)),
                ('medication', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='msys42app.familymember')),
            ],
            options={
                'db_table': 'fam_med_record',
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('med_stat', models.CharField(max_length=255)),
                ('med_history', models.TextField()),
                ('dis_stat', models.CharField(max_length=255)),
                ('dis_history', models.TextField()),
                ('allergies_history', models.TextField()),
                ('other_condition', models.CharField(blank=True, max_length=255, null=True)),
                ('allergies_conditions', models.ManyToManyField(blank=True, to='msys42app.allergycondition')),
                ('child', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='msys42app.child')),
            ],
            options={
                'db_table': 'spc_med_hist',
            },
        ),
        migrations.CreateModel(
            name='Immunization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('immunization_given', models.CharField(max_length=255)),
                ('medical_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='immunizations', to='msys42app.medicalhistory')),
            ],
            options={
                'db_table': 'spc_im',
            },
        ),
        migrations.CreateModel(
            name='PhysiciansExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], default=2025)),
                ('grade', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('height', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('weight', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('bp', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('vision_r', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('vision_l', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('hearing_r', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('hearing_l', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('eyes', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('ears', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('nose', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('throat', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('teeth', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('heart', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('lungs', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('abdomen', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('nervous_system', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('skin', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('nutrition', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('other', models.CharField(choices=[('N', 'N'), ('A', 'A'), ('C', 'C'), ('R', 'R'), ('NE', 'NE')], default='NE', max_length=2)),
                ('other_label', models.CharField(default='other', max_length=20)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='msys42app.child')),
            ],
            options={
                'db_table': 'phys_exam',
            },
        ),
        migrations.CreateModel(
            name='ContactNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=11)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='msys42app.child')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('child', 'number'), name='unique_child_number')],
            },
        ),
    ]
